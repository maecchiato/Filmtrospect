//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForumInterface.AccountReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="account", Namespace="http://schemas.datacontract.org/2004/07/WebForumServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long acc_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string profile_pictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long acc_ID {
            get {
                return this.acc_IDField;
            }
            set {
                if ((this.acc_IDField.Equals(value) != true)) {
                    this.acc_IDField = value;
                    this.RaisePropertyChanged("acc_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bio {
            get {
                return this.bioField;
            }
            set {
                if ((object.ReferenceEquals(this.bioField, value) != true)) {
                    this.bioField = value;
                    this.RaisePropertyChanged("bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                if ((this.dateOfBirthField.Equals(value) != true)) {
                    this.dateOfBirthField = value;
                    this.RaisePropertyChanged("dateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailAdd {
            get {
                return this.emailAddField;
            }
            set {
                if ((object.ReferenceEquals(this.emailAddField, value) != true)) {
                    this.emailAddField = value;
                    this.RaisePropertyChanged("emailAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string profile_picture {
            get {
                return this.profile_pictureField;
            }
            set {
                if ((object.ReferenceEquals(this.profile_pictureField, value) != true)) {
                    this.profile_pictureField = value;
                    this.RaisePropertyChanged("profile_picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="activitylog", Namespace="http://schemas.datacontract.org/2004/07/WebForumServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class activitylog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Account_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Account_ID {
            get {
                return this.Account_IDField;
            }
            set {
                if ((this.Account_IDField.Equals(value) != true)) {
                    this.Account_IDField = value;
                    this.RaisePropertyChanged("Account_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountReference.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/createAccount", ReplyAction="http://tempuri.org/IAccountService/createAccountResponse")]
        string createAccount(string fname, string lname, System.DateTime dob, string uName, string password, string emailAdd, string pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/createAccount", ReplyAction="http://tempuri.org/IAccountService/createAccountResponse")]
        System.Threading.Tasks.Task<string> createAccountAsync(string fname, string lname, System.DateTime dob, string uName, string password, string emailAdd, string pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/insertAccount", ReplyAction="http://tempuri.org/IAccountService/insertAccountResponse")]
        string insertAccount(ForumInterface.AccountReference.account newAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/insertAccount", ReplyAction="http://tempuri.org/IAccountService/insertAccountResponse")]
        System.Threading.Tasks.Task<string> insertAccountAsync(ForumInterface.AccountReference.account newAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/verifyAccount", ReplyAction="http://tempuri.org/IAccountService/verifyAccountResponse")]
        string verifyAccount(string uName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/verifyAccount", ReplyAction="http://tempuri.org/IAccountService/verifyAccountResponse")]
        System.Threading.Tasks.Task<string> verifyAccountAsync(string uName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/activites", ReplyAction="http://tempuri.org/IAccountService/activitesResponse")]
        System.Collections.Generic.List<ForumInterface.AccountReference.activitylog> activites(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/activites", ReplyAction="http://tempuri.org/IAccountService/activitesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ForumInterface.AccountReference.activitylog>> activitesAsync(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/activityList", ReplyAction="http://tempuri.org/IAccountService/activityListResponse")]
        System.Collections.Generic.List<string> activityList(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/activityList", ReplyAction="http://tempuri.org/IAccountService/activityListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> activityListAsync(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/changeProfilePic", ReplyAction="http://tempuri.org/IAccountService/changeProfilePicResponse")]
        string changeProfilePic(string image, int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/changeProfilePic", ReplyAction="http://tempuri.org/IAccountService/changeProfilePicResponse")]
        System.Threading.Tasks.Task<string> changeProfilePicAsync(string image, int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getProfilePicture", ReplyAction="http://tempuri.org/IAccountService/getProfilePictureResponse")]
        string getProfilePicture(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getProfilePicture", ReplyAction="http://tempuri.org/IAccountService/getProfilePictureResponse")]
        System.Threading.Tasks.Task<string> getProfilePictureAsync(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/changeBio", ReplyAction="http://tempuri.org/IAccountService/changeBioResponse")]
        string changeBio(string bio, int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/changeBio", ReplyAction="http://tempuri.org/IAccountService/changeBioResponse")]
        System.Threading.Tasks.Task<string> changeBioAsync(string bio, int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getBio", ReplyAction="http://tempuri.org/IAccountService/getBioResponse")]
        string getBio(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getBio", ReplyAction="http://tempuri.org/IAccountService/getBioResponse")]
        System.Threading.Tasks.Task<string> getBioAsync(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getUserName", ReplyAction="http://tempuri.org/IAccountService/getUserNameResponse")]
        string getUserName(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getUserName", ReplyAction="http://tempuri.org/IAccountService/getUserNameResponse")]
        System.Threading.Tasks.Task<string> getUserNameAsync(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getName", ReplyAction="http://tempuri.org/IAccountService/getNameResponse")]
        string getName(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getName", ReplyAction="http://tempuri.org/IAccountService/getNameResponse")]
        System.Threading.Tasks.Task<string> getNameAsync(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getDob", ReplyAction="http://tempuri.org/IAccountService/getDobResponse")]
        string getDob(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getDob", ReplyAction="http://tempuri.org/IAccountService/getDobResponse")]
        System.Threading.Tasks.Task<string> getDobAsync(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getEmail", ReplyAction="http://tempuri.org/IAccountService/getEmailResponse")]
        string getEmail(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getEmail", ReplyAction="http://tempuri.org/IAccountService/getEmailResponse")]
        System.Threading.Tasks.Task<string> getEmailAsync(int accID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : ForumInterface.AccountReference.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<ForumInterface.AccountReference.IAccountService>, ForumInterface.AccountReference.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string createAccount(string fname, string lname, System.DateTime dob, string uName, string password, string emailAdd, string pic) {
            return base.Channel.createAccount(fname, lname, dob, uName, password, emailAdd, pic);
        }
        
        public System.Threading.Tasks.Task<string> createAccountAsync(string fname, string lname, System.DateTime dob, string uName, string password, string emailAdd, string pic) {
            return base.Channel.createAccountAsync(fname, lname, dob, uName, password, emailAdd, pic);
        }
        
        public string insertAccount(ForumInterface.AccountReference.account newAccount) {
            return base.Channel.insertAccount(newAccount);
        }
        
        public System.Threading.Tasks.Task<string> insertAccountAsync(ForumInterface.AccountReference.account newAccount) {
            return base.Channel.insertAccountAsync(newAccount);
        }
        
        public string verifyAccount(string uName, string password) {
            return base.Channel.verifyAccount(uName, password);
        }
        
        public System.Threading.Tasks.Task<string> verifyAccountAsync(string uName, string password) {
            return base.Channel.verifyAccountAsync(uName, password);
        }
        
        public System.Collections.Generic.List<ForumInterface.AccountReference.activitylog> activites(int accID) {
            return base.Channel.activites(accID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ForumInterface.AccountReference.activitylog>> activitesAsync(int accID) {
            return base.Channel.activitesAsync(accID);
        }
        
        public System.Collections.Generic.List<string> activityList(int accID) {
            return base.Channel.activityList(accID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> activityListAsync(int accID) {
            return base.Channel.activityListAsync(accID);
        }
        
        public string changeProfilePic(string image, int accID) {
            return base.Channel.changeProfilePic(image, accID);
        }
        
        public System.Threading.Tasks.Task<string> changeProfilePicAsync(string image, int accID) {
            return base.Channel.changeProfilePicAsync(image, accID);
        }
        
        public string getProfilePicture(int accID) {
            return base.Channel.getProfilePicture(accID);
        }
        
        public System.Threading.Tasks.Task<string> getProfilePictureAsync(int accID) {
            return base.Channel.getProfilePictureAsync(accID);
        }
        
        public string changeBio(string bio, int accID) {
            return base.Channel.changeBio(bio, accID);
        }
        
        public System.Threading.Tasks.Task<string> changeBioAsync(string bio, int accID) {
            return base.Channel.changeBioAsync(bio, accID);
        }
        
        public string getBio(int accID) {
            return base.Channel.getBio(accID);
        }
        
        public System.Threading.Tasks.Task<string> getBioAsync(int accID) {
            return base.Channel.getBioAsync(accID);
        }
        
        public string getUserName(int accID) {
            return base.Channel.getUserName(accID);
        }
        
        public System.Threading.Tasks.Task<string> getUserNameAsync(int accID) {
            return base.Channel.getUserNameAsync(accID);
        }
        
        public string getName(int accID) {
            return base.Channel.getName(accID);
        }
        
        public System.Threading.Tasks.Task<string> getNameAsync(int accID) {
            return base.Channel.getNameAsync(accID);
        }
        
        public string getDob(int accID) {
            return base.Channel.getDob(accID);
        }
        
        public System.Threading.Tasks.Task<string> getDobAsync(int accID) {
            return base.Channel.getDobAsync(accID);
        }
        
        public string getEmail(int accID) {
            return base.Channel.getEmail(accID);
        }
        
        public System.Threading.Tasks.Task<string> getEmailAsync(int accID) {
            return base.Channel.getEmailAsync(accID);
        }
    }
}
