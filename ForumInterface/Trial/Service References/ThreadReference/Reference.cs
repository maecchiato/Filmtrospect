//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForumInterface.ThreadReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="movie", Namespace="http://schemas.datacontract.org/2004/07/WebForumServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string posterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string previewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ratingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long yearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plot {
            get {
                return this.plotField;
            }
            set {
                if ((object.ReferenceEquals(this.plotField, value) != true)) {
                    this.plotField = value;
                    this.RaisePropertyChanged("plot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poster {
            get {
                return this.posterField;
            }
            set {
                if ((object.ReferenceEquals(this.posterField, value) != true)) {
                    this.posterField = value;
                    this.RaisePropertyChanged("poster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string preview {
            get {
                return this.previewField;
            }
            set {
                if ((object.ReferenceEquals(this.previewField, value) != true)) {
                    this.previewField = value;
                    this.RaisePropertyChanged("preview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> rating {
            get {
                return this.ratingField;
            }
            set {
                if ((this.ratingField.Equals(value) != true)) {
                    this.ratingField = value;
                    this.RaisePropertyChanged("rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long year {
            get {
                return this.yearField;
            }
            set {
                if ((this.yearField.Equals(value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ThreadReference.IThreadService")]
    public interface IThreadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/createMovie", ReplyAction="http://tempuri.org/IThreadService/createMovieResponse")]
        int createMovie(string plot, string title, int year, string poster, string preview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/createMovie", ReplyAction="http://tempuri.org/IThreadService/createMovieResponse")]
        System.Threading.Tasks.Task<int> createMovieAsync(string plot, string title, int year, string poster, string preview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/insertMovie", ReplyAction="http://tempuri.org/IThreadService/insertMovieResponse")]
        int insertMovie(ForumInterface.ThreadReference.movie newMovie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/insertMovie", ReplyAction="http://tempuri.org/IThreadService/insertMovieResponse")]
        System.Threading.Tasks.Task<int> insertMovieAsync(ForumInterface.ThreadReference.movie newMovie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/assignCategory", ReplyAction="http://tempuri.org/IThreadService/assignCategoryResponse")]
        string assignCategory(int movieID, string catgry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/assignCategory", ReplyAction="http://tempuri.org/IThreadService/assignCategoryResponse")]
        System.Threading.Tasks.Task<string> assignCategoryAsync(int movieID, string catgry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/computeRating", ReplyAction="http://tempuri.org/IThreadService/computeRatingResponse")]
        int computeRating(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/computeRating", ReplyAction="http://tempuri.org/IThreadService/computeRatingResponse")]
        System.Threading.Tasks.Task<int> computeRatingAsync(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/updateMovieRate", ReplyAction="http://tempuri.org/IThreadService/updateMovieRateResponse")]
        void updateMovieRate(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/updateMovieRate", ReplyAction="http://tempuri.org/IThreadService/updateMovieRateResponse")]
        System.Threading.Tasks.Task updateMovieRateAsync(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByRating", ReplyAction="http://tempuri.org/IThreadService/adminMovByRatingResponse")]
        System.Collections.Generic.List<int> adminMovByRating();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByRating", ReplyAction="http://tempuri.org/IThreadService/adminMovByRatingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByRatingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByRatingCat", ReplyAction="http://tempuri.org/IThreadService/adminMovByRatingCatResponse")]
        System.Collections.Generic.List<int> adminMovByRatingCat(string cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByRatingCat", ReplyAction="http://tempuri.org/IThreadService/adminMovByRatingCatResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByRatingCatAsync(string cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByComment", ReplyAction="http://tempuri.org/IThreadService/adminMovByCommentResponse")]
        System.Collections.Generic.List<int> adminMovByComment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByComment", ReplyAction="http://tempuri.org/IThreadService/adminMovByCommentResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByCommentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByCommentCat", ReplyAction="http://tempuri.org/IThreadService/adminMovByCommentCatResponse")]
        System.Collections.Generic.List<int> adminMovByCommentCat(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThreadService/adminMovByCommentCat", ReplyAction="http://tempuri.org/IThreadService/adminMovByCommentCatResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByCommentCatAsync(string category);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IThreadServiceChannel : ForumInterface.ThreadReference.IThreadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ThreadServiceClient : System.ServiceModel.ClientBase<ForumInterface.ThreadReference.IThreadService>, ForumInterface.ThreadReference.IThreadService {
        
        public ThreadServiceClient() {
        }
        
        public ThreadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ThreadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ThreadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ThreadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int createMovie(string plot, string title, int year, string poster, string preview) {
            return base.Channel.createMovie(plot, title, year, poster, preview);
        }
        
        public System.Threading.Tasks.Task<int> createMovieAsync(string plot, string title, int year, string poster, string preview) {
            return base.Channel.createMovieAsync(plot, title, year, poster, preview);
        }
        
        public int insertMovie(ForumInterface.ThreadReference.movie newMovie) {
            return base.Channel.insertMovie(newMovie);
        }
        
        public System.Threading.Tasks.Task<int> insertMovieAsync(ForumInterface.ThreadReference.movie newMovie) {
            return base.Channel.insertMovieAsync(newMovie);
        }
        
        public string assignCategory(int movieID, string catgry) {
            return base.Channel.assignCategory(movieID, catgry);
        }
        
        public System.Threading.Tasks.Task<string> assignCategoryAsync(int movieID, string catgry) {
            return base.Channel.assignCategoryAsync(movieID, catgry);
        }
        
        public int computeRating(int movieID) {
            return base.Channel.computeRating(movieID);
        }
        
        public System.Threading.Tasks.Task<int> computeRatingAsync(int movieID) {
            return base.Channel.computeRatingAsync(movieID);
        }
        
        public void updateMovieRate(int movieID) {
            base.Channel.updateMovieRate(movieID);
        }
        
        public System.Threading.Tasks.Task updateMovieRateAsync(int movieID) {
            return base.Channel.updateMovieRateAsync(movieID);
        }
        
        public System.Collections.Generic.List<int> adminMovByRating() {
            return base.Channel.adminMovByRating();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByRatingAsync() {
            return base.Channel.adminMovByRatingAsync();
        }
        
        public System.Collections.Generic.List<int> adminMovByRatingCat(string cat) {
            return base.Channel.adminMovByRatingCat(cat);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByRatingCatAsync(string cat) {
            return base.Channel.adminMovByRatingCatAsync(cat);
        }
        
        public System.Collections.Generic.List<int> adminMovByComment() {
            return base.Channel.adminMovByComment();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByCommentAsync() {
            return base.Channel.adminMovByCommentAsync();
        }
        
        public System.Collections.Generic.List<int> adminMovByCommentCat(string category) {
            return base.Channel.adminMovByCommentCat(category);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> adminMovByCommentCatAsync(string category) {
            return base.Channel.adminMovByCommentCatAsync(category);
        }
    }
}
